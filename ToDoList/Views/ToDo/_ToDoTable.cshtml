@model ToDoList.Models.ViewModels.ToDoVM
@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
<div class="table-responsive ">
    <table class="table table-hover table-bordered">
        <thead class="table-secondary">
            <tr>
                <th width="10">Sl</th>
                <th width="40">Details</th>
                <th width="10">Status</th>
                <th width="40">Actions</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.ToDoList.Count() > 0)
            {
                int i = 0;
                foreach (var toDo in Model.ToDoList)
                {
                    i++;
                    <tr>
                        <td width="10">@(i)</td>
                        @if(toDo.Status==true)
                        {
                            <td width="40"><p class="text-primary">@toDo.ToDoDetails</p></td>
                        }
                        else
                        {
                             <td width="40"><p class="text-danger">@toDo.ToDoDetails</p></td>         
                        }
                        @if(toDo.Status==true)
                        {
                            <td width="40"><input checked type="checkbox" class="form-check-input"/></td>
                        }
                        else
                        {
                            <td width="40"><input  type="checkbox" class="form-check-input"/></td>       
                        }
                      
                        <td width="40">
                            <button class="btn btn-success doneBtn" data-id="@toDo.Id"><i class="fa fa-check"></i></button>
                            @if (User.IsInRole("Admin"))
                            {
                               <a class="btn btn-primary" asp-action="Upsert" asp-route-id="@toDo.Id"><i class="fas fa-edit"></i></a>

                                <button class="btn btn-danger deleteBtn" data-id="@toDo.Id"><i class="fas fa-trash-alt"></i></button>
                            }
                        </td>
                     </tr>
                }
            }
            else
            {
                <tr>
                    <td></td>
                     <td class="text-danger">No ToDo Available</td>
                     <td></td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="text-center">
    @if (Model.Pager != null && Model.Pager.TotalPages > 1)
    {
        @if (Model.Pager.CurrentPage > 1)
        {
                                                    <button class="btn btn-outline-info page-buttons" data-pageNo="1">First</button>
                                                    <button class="btn btn-outline-info page-buttons" data-pageNo="@(Model.Pager.CurrentPage-1)">Previous</button>
        }
        for (int page = Model.Pager.StartPage; page <= Model.Pager.EndPage; page++)
        {
            string activeClass = Model.Pager.CurrentPage == page ? "active bg-info" : "";
                                                    <button class="btn btn-outline-info page-buttons @activeClass" data-pageNo="@(page)">@(page)</button>
        }
        if (Model.Pager.CurrentPage < Model.Pager.EndPage)
        {
                                                    <button class="btn btn-outline-info page-buttons" data-pageNo="@(Model.Pager.CurrentPage+1)">Next</button>
                                                    <button class="btn btn-outline-info page-buttons" data-pageNo="@(Model.Pager.EndPage)">Last</button>
        }
    }
</div>

<script>
    $(document).ready(function () {

        $(".doneBtn").click(function () {
            swal({
                title: "Are You Sure to Make it Done",
                icon: "success",
                dangerMode: true,
                buttons: true
            }).then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: '@Url.Action("ToDoDone", "ToDo")',
                        type: "POST",
                        data: {
                            id: $(this).attr("data-id")
                        }
                    }).done(function (response) {
                        if(response.success==true)
                        {
                             swal(response.message, {
                                icon: "success"
                            });
                        }
                        else{
                            swal(response.message, {
                                icon: "success"
                            });
                        }

                        $("#table-container").html(response);
                    }).fail(function (xhr) {

                        toastr.error("Something went wrong");
                    })
                }
            })
        });
        $(".deleteBtn").click(function () {
            swal({
                title: "Are you sure that you want to delete this data",
                text: "If you once delete this you can not restore it!",
                icon: "warning",
                dangerMode: true,
                buttons: true
            }).then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        url: '@Url.Action("Delete", "ToDo")',
                        type: "POST",
                        data: {
                            id: $(this).attr("data-id")
                        }
                    }).done(function (response) {
                        swal("Successfully Deleted", {
                            icon: "success"
                        });

                        $("#table-container").html(response);
                    }).fail(function (xhr) {

                        toastr.error("Something went wrong");
                    })
                }
            })
        });
        $(".page-buttons").click(function () {
            $.ajax({
                url: '@Url.Action("ToDoTable", "ToDo")',
                data: {
                    pageNo: $(this).attr("data-pageNo"),
                    searchValue: '@Model.Search'
                }
            }).done(function (response) {

                $("#table-container").html(response);
            }).fail(function (xhr) {

                toastr.error("Something Went Wrong");
            })
        })
    });
</script>
